{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { userId } from \"../hooks/auth-hook\";\nlet logoutTimer;\nexport const useAuth = () => {\n  _s();\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\"userData\", JSON.stringify({\n      userId: uid,\n      token: token,\n      expiration: tokenExpirationDate.toISOString()\n    }));\n  }, []);\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n    window.location.pathname = \"/\";\n  }, []);\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n  return {\n    token,\n    login,\n    logout,\n    userId\n  };\n};\n_s(useAuth, \"+oy5I1iyA1O0VWPzFLYiMGJUUq0=\");","map":{"version":3,"names":["useCallback","useEffect","useState","userId","logoutTimer","useAuth","_s","token","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","login","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","logout","removeItem","window","location","pathname","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem"],"sources":["/Users/adisalic/Desktop/weblearning/parking/src/hooks/auth-hook.js"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport {userId} from \"../hooks/auth-hook\"\n\nlet logoutTimer;\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n    window.location.pathname = \"/\";\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAAQC,MAAM,QAAO,oBAAoB;AAEzC,IAAIC,WAAW;AACf,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACO,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAChE,MAAM,CAACC,MAAM,EAAEQ,SAAS,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMU,KAAK,GAAGZ,WAAW,CAAC,CAACa,GAAG,EAAEN,KAAK,EAAEO,cAAc,KAAK;IACxDN,QAAQ,CAACD,KAAK,CAAC;IACfI,SAAS,CAACE,GAAG,CAAC;IACd,MAAMJ,mBAAmB,GACvBK,cAAc,IAAI,IAAIC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACnEN,sBAAsB,CAACD,mBAAmB,CAAC;IAC3CQ,YAAY,CAACC,OAAO,CAClB,UAAU,EACVC,IAAI,CAACC,SAAS,CAAC;MACbjB,MAAM,EAAEU,GAAG;MACXN,KAAK,EAAEA,KAAK;MACZc,UAAU,EAAEZ,mBAAmB,CAACa,WAAW,CAAC;IAC9C,CAAC,CACH,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGvB,WAAW,CAAC,MAAM;IAC/BQ,QAAQ,CAAC,IAAI,CAAC;IACdE,sBAAsB,CAAC,IAAI,CAAC;IAC5BC,SAAS,CAAC,IAAI,CAAC;IACfM,YAAY,CAACO,UAAU,CAAC,UAAU,CAAC;IACnCC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAG,GAAG;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACd,IAAIM,KAAK,IAAIE,mBAAmB,EAAE;MAChC,MAAMmB,aAAa,GACjBnB,mBAAmB,CAACO,OAAO,CAAC,CAAC,GAAG,IAAID,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;MACtDZ,WAAW,GAAGyB,UAAU,CAACN,MAAM,EAAEK,aAAa,CAAC;IACjD,CAAC,MAAM;MACLE,YAAY,CAAC1B,WAAW,CAAC;IAC3B;EACF,CAAC,EAAE,CAACG,KAAK,EAAEgB,MAAM,EAAEd,mBAAmB,CAAC,CAAC;EAExCR,SAAS,CAAC,MAAM;IACd,MAAM8B,UAAU,GAAGZ,IAAI,CAACa,KAAK,CAACf,YAAY,CAACgB,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/D,IACEF,UAAU,IACVA,UAAU,CAACxB,KAAK,IAChB,IAAIQ,IAAI,CAACgB,UAAU,CAACV,UAAU,CAAC,GAAG,IAAIN,IAAI,CAAC,CAAC,EAC5C;MACAH,KAAK,CACHmB,UAAU,CAAC5B,MAAM,EACjB4B,UAAU,CAACxB,KAAK,EAChB,IAAIQ,IAAI,CAACgB,UAAU,CAACV,UAAU,CAChC,CAAC;IACH;EACF,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEL,KAAK;IAAEK,KAAK;IAAEW,MAAM;IAAEpB;EAAO,CAAC;AACzC,CAAC;AAACG,EAAA,CAvDWD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}