{"ast":null,"code":"var _jsxFileName = \"/Users/adisalic/Desktop/weblearning/parking/src/user/components/FormElements/Input.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer, useEffect } from \"react\";\nimport classes from \"./Input.module.css\";\nimport { validate } from \"../../../util/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\":\n      {\n        return {\n          ...state,\n          isTouched: true\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst Input = props => {\n  _s();\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n  const element = props.element === \"input\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes[\"form-control\"]} ${!inputState.isValid && inputState.isTouched && classes[\"form-control--invalid\"]}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 55\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Input, \"VdiPiOZzOx5h9fE233u86w5GpvY=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useReducer","useEffect","classes","validate","jsxDEV","_jsxDEV","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","_s","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","children","htmlFor","label","errorText","_c","$RefreshReg$"],"sources":["/Users/adisalic/Desktop/weblearning/parking/src/user/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport classes from \"./Input.module.css\";\nimport { validate } from \"../../../util/validators\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = (event) => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\",\n    });\n  };\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`${classes[\"form-control\"]} ${\n        !inputState.isValid &&\n        inputState.isTouched &&\n        classes[\"form-control--invalid\"]\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}