{"ast":null,"code":"var _jsxFileName = \"/Users/adisalic/Desktop/weblearning/parking/src/user/components/CarSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { AuthContext } from \"../../context/auth-context\";\nimport classes from \"./LastPayments.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarSelection = _ref => {\n  _s();\n  let {\n    selectedPay,\n    onClose\n  } = _ref;\n  const [selectedPays, setSelectedPay] = useState([]);\n  const auth = useContext(AuthContext);\n  const {\n    sendRequest\n  } = useHttpClient();\n  const [loadedCars, setLoadedCars] = useState([]);\n  useEffect(() => {\n    setSelectedPay(selectedPay);\n    const fetchCars = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5500/api/cars/user/${auth.userId}`, \"GET\", null, {\n          Authorization: \"Bearer \" + auth.token\n        });\n        setLoadedCars(responseData.cars);\n      } catch (err) {}\n    };\n    fetchCars();\n    // eslint-disable-next-line\n  }, [sendRequest]);\n  const carPayment = async plate => {\n    try {\n      await sendRequest(`http://localhost:5500/api/payments/${auth.userId}`, \"POST\", JSON.stringify({\n        id: selectedPay.id,\n        name: selectedPay.name,\n        zone: selectedPay.zone,\n        plate: plate,\n        price: selectedPay.price\n      }), {\n        Authorization: \"Bearer \" + auth.token,\n        \"Content-Type\": \"application/json\"\n      });\n      onClose(); // Close the car selection after payment\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loadedCars.map(cars => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.plates,\n      onClick: () => carPay(cars.plate),\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: classes.link,\n        to: \"sms:+3878335\" + numH + \";?&body=\" + cars.plate,\n        children: [cars.name, \" - (\", cars.plate, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, cars._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: onClose,\n      children: \"Odustani\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(CarSelection, \"aCvTDAP6RpE85YFB0ZUivCJCDfE=\", false, function () {\n  return [useHttpClient];\n});\n_c = CarSelection;\nexport default CarSelection;\nvar _c;\n$RefreshReg$(_c, \"CarSelection\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useHttpClient","AuthContext","classes","jsxDEV","_jsxDEV","CarSelection","_ref","_s","selectedPay","onClose","selectedPays","setSelectedPay","auth","sendRequest","loadedCars","setLoadedCars","fetchCars","responseData","userId","Authorization","token","cars","err","carPayment","plate","JSON","stringify","id","name","zone","price","console","log","children","map","className","plates","onClick","carPay","Link","link","to","numH","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/adisalic/Desktop/weblearning/parking/src/user/components/CarSelection.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport { AuthContext } from \"../../context/auth-context\";\nimport classes from \"./LastPayments.module.css\";\n\nconst CarSelection = ({ selectedPay, onClose }) => {\n    const[selectedPays, setSelectedPay] = useState([])\n  const auth = useContext(AuthContext);\n  const { sendRequest } = useHttpClient();\n  const [loadedCars, setLoadedCars] = useState([]);\n\n  useEffect(() => {\n    setSelectedPay(selectedPay)\n    const fetchCars = async () => {\n      try {\n        const responseData = await sendRequest(\n          `http://localhost:5500/api/cars/user/${auth.userId}`,\n          \"GET\",\n          null,\n          {\n            Authorization: \"Bearer \" + auth.token,\n          }\n        );\n        setLoadedCars(responseData.cars);\n      } catch (err) {}\n    };\n    fetchCars();\n    // eslint-disable-next-line\n  }, [sendRequest]);\n\n  const carPayment = async (plate) => {\n    try {\n      await sendRequest(\n        `http://localhost:5500/api/payments/${auth.userId}`,\n        \"POST\",\n        JSON.stringify({\n          id: selectedPay.id,\n          name: selectedPay.name,\n          zone: selectedPay.zone,\n          plate: plate,\n          price: selectedPay.price,\n        }),\n        {\n          Authorization: \"Bearer \" + auth.token,\n          \"Content-Type\": \"application/json\",\n        }\n      );\n      onClose(); // Close the car selection after payment\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div>\n      {loadedCars.map((cars) => (\n        <button\n          key={cars._id}\n          className={classes.plates}\n          onClick={() => carPay(cars.plate)}\n        >\n          <Link\n            className={classes.link}\n            to={\"sms:+3878335\" + numH + \";?&body=\" + cars.plate}\n          >\n            {cars.name} - ({cars.plate})\n          </Link>\n        </button>\n      ))}\n      <div onClick={onClose}>Odustani</div>\n    </div>\n  );\n};\n\nexport default CarSelection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}